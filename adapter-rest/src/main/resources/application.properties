#cria um context path para o nosso endpoint e define a nossa porta
server.servlet.context-path=/api
server.port=8013

#define os dados para acesso ao banco de dados
spring.datasource.driver-class-name=org.postgresql.Driver
spring.datasource.username=postgres
spring.datasource.password=postgres
spring.datasource.url=jdbc:postgresql://localhost:5432/postgres?currentSchema=public
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.show-sql=true
spring.jpa.hibernate.ddl-auto=update

#define configuracao do circuit break
feign.circuitbreaker.enabled=true
feign.client.config.default.connectTimeout=5000
feign.client.config.default.readTimeout=5000
feign.okhttp.enabled=true

#define o nivel de log da aplicacao
logging.level.br.com.lanchonete=DEBUG
logging.level.org.springframework=INFO

#define o path para acessar a documentacao em formato swagger
springdoc.api-docs.path=/documentation

##desabilita todos os endpoints do actuator
management.endpoints.enabled-by-default=false

##expoe somente os endpoints de metrics, health check e prometheus
management.endpoints.web.exposure.include=metrics,health,prometheus

##habilita os endpoints de metrics, health check e prometheus
management.endpoint.metrics.enabled=true
management.endpoint.health.enabled=true
management.endpoint.prometheus.enabled=true

##habilita mais detalhes no health como por exemplo health do db, diskSpace, ping e outros customizados
management.endpoint.health.show-details=always

##aws
aws.access-key=
aws.access-secret=
aws.default-region=us-east-1

##internal apis
api.order.url=http://localhost:8012/api/v1/orders